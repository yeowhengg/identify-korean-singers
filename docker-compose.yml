version: '2.1'

services:
  backend:
    container_name: backend
    environment:
      AI_IP: ${AI_IP}    
    networks:
      - default
      - internal-network
    build: ./Server
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      caddy:
        condition: service_started
    restart: always
    volumes:
      - ./Server/main/backend:/code/main/backend
  
  telegram-bot:
    container_name: telegram-bot
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
    networks:
      - default
      - internal-network
    build: ./TelegramBot
    command: python3 bot.py
    restart: always
    volumes:
      - ./TelegramBot:/code

  ai-server:
    container_name: ai-server
    networks:
      - default
      - internal-network
    build: ./SimpleHTTPServer
    command: python3 start_server.py
    restart: always
    volumes:
      - ./SimpleHTTPServer:/code

  caddy:
    container_name: proxy
    environment:
      BACKEND_IP: ${BACKEND_IP}
    image: caddy:2.6.2-alpine
    ports:
      - '443:443'
      - '80:80'
      - '8000:8000'
    restart: always
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

volumes:
  caddy_config: null
  caddy_data: null

networks:
  internal-network:
    name: internal-network
    driver: bridge
